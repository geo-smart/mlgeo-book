Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.model_selection import cross_val_predict
bag_clf = BaggingClassifier(
    base_estimator = KNeighborsClassifier(),n_estimators=100,  # n_estimator is the number of models to train
    max_samples=100,bootstrap=True, # bootstrap is for bagging vs pasting
    n_jobs=-1,oob_score=True,#number of CPU cores independently used for training and prediction. Use -1 for all available score
    )
scores=cross_val_predict(bag_clf,X_test,y_test,cv=5) # the size of max_samples

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [9][0m, in [0;36m<cell line: 2>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmodel_selection[39;00m [38;5;28;01mimport[39;00m cross_val_predict
[0;32m----> 2[0m bag_clf [38;5;241m=[39m [43mBaggingClassifier[49m[43m([49m
[1;32m      3[0m [43m    [49m[43mbase_estimator[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mKNeighborsClassifier[49m[43m([49m[43m)[49m[43m,[49m[43mn_estimators[49m[38;5;241;43m=[39;49m[38;5;241;43m100[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# n_estimator is the number of models to train[39;49;00m
[1;32m      4[0m [43m    [49m[43mmax_samples[49m[38;5;241;43m=[39;49m[38;5;241;43m100[39;49m[43m,[49m[43mbootstrap[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[38;5;66;43;03m# bootstrap is for bagging vs pasting[39;49;00m
[1;32m      5[0m [43m    [49m[43mn_jobs[49m[38;5;241;43m=[39;49m[38;5;241;43m-[39;49m[38;5;241;43m1[39;49m[43m,[49m[43moob_score[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[38;5;66;43;03m#number of CPU cores independently used for training and prediction. Use -1 for all available score[39;49;00m
[1;32m      6[0m [43m    [49m[43m)[49m
[1;32m      7[0m scores[38;5;241m=[39mcross_val_predict(bag_clf,X_test,y_test,cv[38;5;241m=[39m[38;5;241m5[39m)

[0;31mTypeError[0m: BaggingClassifier.__init__() got an unexpected keyword argument 'base_estimator'
TypeError: BaggingClassifier.__init__() got an unexpected keyword argument 'base_estimator'

