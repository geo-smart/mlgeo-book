Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# this is some underway data collected from a cruise in 2019
os.replace("ug3_FCM_distribution.feather",'../../../ug3_FCM_distribution.feather')
underway_g3 = pd.read_feather("../../../ug3_FCM_distribution.feather")
print(underway_g3.columns)
underway_g3.head()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/pandas/compat/_optional.py:132[0m, in [0;36mimport_optional_dependency[0;34m(name, extra, errors, min_version)[0m
[1;32m    131[0m [38;5;28;01mtry[39;00m:
[0;32m--> 132[0m     module [38;5;241m=[39m [43mimportlib[49m[38;5;241;43m.[39;49m[43mimport_module[49m[43m([49m[43mname[49m[43m)[49m
[1;32m    133[0m [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:

File [0;32m/usr/share/miniconda3/envs/geosmart/lib/python3.10/importlib/__init__.py:126[0m, in [0;36mimport_module[0;34m(name, package)[0m
[1;32m    125[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[0;32m--> 126[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m

File [0;32m<frozen importlib._bootstrap>:1050[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m

File [0;32m<frozen importlib._bootstrap>:1027[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m

File [0;32m<frozen importlib._bootstrap>:1004[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m

[0;31mModuleNotFoundError[0m: No module named 'pyarrow'

During handling of the above exception, another exception occurred:

[0;31mImportError[0m                               Traceback (most recent call last)
Input [0;32mIn [3][0m, in [0;36m<cell line: 3>[0;34m()[0m
[1;32m      1[0m [38;5;66;03m# this is some underway data collected from a cruise in 2019[39;00m
[1;32m      2[0m os[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124mug3_FCM_distribution.feather[39m[38;5;124m"[39m,[38;5;124m'[39m[38;5;124m../../../ug3_FCM_distribution.feather[39m[38;5;124m'[39m)
[0;32m----> 3[0m underway_g3 [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_feather[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43m../../../ug3_FCM_distribution.feather[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      4[0m [38;5;28mprint[39m(underway_g3[38;5;241m.[39mcolumns)
[1;32m      5[0m underway_g3[38;5;241m.[39mhead()

File [0;32m/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/pandas/io/feather_format.py:117[0m, in [0;36mread_feather[0;34m(path, columns, use_threads, storage_options, dtype_backend)[0m
[1;32m     72[0m [38;5;129m@doc[39m(storage_options[38;5;241m=[39m_shared_docs[[38;5;124m"[39m[38;5;124mstorage_options[39m[38;5;124m"[39m])
[1;32m     73[0m [38;5;28;01mdef[39;00m [38;5;21mread_feather[39m(
[1;32m     74[0m     path: FilePath [38;5;241m|[39m ReadBuffer[[38;5;28mbytes[39m],
[0;32m   (...)[0m
[1;32m     78[0m     dtype_backend: DtypeBackend [38;5;241m|[39m lib[38;5;241m.[39mNoDefault [38;5;241m=[39m lib[38;5;241m.[39mno_default,
[1;32m     79[0m ) [38;5;241m-[39m[38;5;241m>[39m DataFrame:
[1;32m     80[0m     [38;5;124;03m"""[39;00m
[1;32m     81[0m [38;5;124;03m    Load a feather-format object from the file path.[39;00m
[1;32m     82[0m 
[0;32m   (...)[0m
[1;32m    115[0m [38;5;124;03m    >>> df = pd.read_feather("path/to/file.feather")  # doctest: +SKIP[39;00m
[1;32m    116[0m [38;5;124;03m    """[39;00m
[0;32m--> 117[0m     [43mimport_optional_dependency[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mpyarrow[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m    118[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mpyarrow[39;00m [38;5;28;01mimport[39;00m feather
[1;32m    120[0m     [38;5;66;03m# import utils to register the pyarrow extension types[39;00m

File [0;32m/usr/share/miniconda3/envs/geosmart/lib/python3.10/site-packages/pandas/compat/_optional.py:135[0m, in [0;36mimport_optional_dependency[0;34m(name, extra, errors, min_version)[0m
[1;32m    133[0m [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:
[1;32m    134[0m     [38;5;28;01mif[39;00m errors [38;5;241m==[39m [38;5;124m"[39m[38;5;124mraise[39m[38;5;124m"[39m:
[0;32m--> 135[0m         [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(msg)
[1;32m    136[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mNone[39;00m
[1;32m    138[0m [38;5;66;03m# Handle submodules: if we have submodule, grab parent module from sys.modules[39;00m

[0;31mImportError[0m: Missing optional dependency 'pyarrow'.  Use pip or conda to install pyarrow.
ImportError: Missing optional dependency 'pyarrow'.  Use pip or conda to install pyarrow.

